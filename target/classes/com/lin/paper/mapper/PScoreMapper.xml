<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lin.paper.mapper.PScoreMapper" >
  <resultMap id="BaseResultMap" type="com.lin.paper.pojo.PScore" >
    <id column="scoreId" property="scoreid" jdbcType="VARCHAR" />
    <result column="paperId" property="paperid" jdbcType="VARCHAR" />
    <result column="teachId" property="teachid" jdbcType="VARCHAR" />
    <result column="scores" property="scores" jdbcType="DOUBLE" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    scoreId, paperId, teachId, scores, createTime, updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lin.paper.pojo.PScoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from p_score
    where scoreId = #{scoreid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from p_score
    where scoreId = #{scoreid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lin.paper.pojo.PScoreExample" >
    delete from p_score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lin.paper.pojo.PScore" >
    insert into p_score (scoreId, paperId, teachId, 
      scores, createTime, updateTime
      )
    values (#{scoreid,jdbcType=VARCHAR}, #{paperid,jdbcType=VARCHAR}, #{teachid,jdbcType=VARCHAR}, 
      #{scores,jdbcType=DOUBLE}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lin.paper.pojo.PScore" >
    insert into p_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="scoreid != null" >
        scoreId,
      </if>
      <if test="paperid != null" >
        paperId,
      </if>
      <if test="teachid != null" >
        teachId,
      </if>
      <if test="scores != null" >
        scores,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="scoreid != null" >
        #{scoreid,jdbcType=VARCHAR},
      </if>
      <if test="paperid != null" >
        #{paperid,jdbcType=VARCHAR},
      </if>
      <if test="teachid != null" >
        #{teachid,jdbcType=VARCHAR},
      </if>
      <if test="scores != null" >
        #{scores,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lin.paper.pojo.PScoreExample" resultType="java.lang.Integer" >
    select count(*) from p_score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update p_score
    <set >
      <if test="record.scoreid != null" >
        scoreId = #{record.scoreid,jdbcType=VARCHAR},
      </if>
      <if test="record.paperid != null" >
        paperId = #{record.paperid,jdbcType=VARCHAR},
      </if>
      <if test="record.teachid != null" >
        teachId = #{record.teachid,jdbcType=VARCHAR},
      </if>
      <if test="record.scores != null" >
        scores = #{record.scores,jdbcType=DOUBLE},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update p_score
    set scoreId = #{record.scoreid,jdbcType=VARCHAR},
      paperId = #{record.paperid,jdbcType=VARCHAR},
      teachId = #{record.teachid,jdbcType=VARCHAR},
      scores = #{record.scores,jdbcType=DOUBLE},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lin.paper.pojo.PScore" >
    update p_score
    <set >
      <if test="paperid != null" >
        paperId = #{paperid,jdbcType=VARCHAR},
      </if>
      <if test="teachid != null" >
        teachId = #{teachid,jdbcType=VARCHAR},
      </if>
      <if test="scores != null" >
        scores = #{scores,jdbcType=DOUBLE},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where scoreId = #{scoreid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lin.paper.pojo.PScore" >
    update p_score
    set paperId = #{paperid,jdbcType=VARCHAR},
      teachId = #{teachid,jdbcType=VARCHAR},
      scores = #{scores,jdbcType=DOUBLE},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where scoreId = #{scoreid,jdbcType=VARCHAR}
  </update>
</mapper>