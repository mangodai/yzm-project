<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lin.paper.mapper.PSelectMapper" >
  <resultMap id="BaseResultMap" type="com.lin.paper.pojo.PSelect" >
    <id column="selectId" property="selectid" jdbcType="VARCHAR" />
    <result column="subjectId" property="subjectid" jdbcType="VARCHAR" />
    <result column="stuId" property="stuid" jdbcType="VARCHAR" />
    <result column="progressId" property="progressid" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="DOUBLE" />
    <result column="selectState" property="selectstate" jdbcType="INTEGER" />
    <result column="taskId" property="taskid" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    selectId, subjectId, stuId, progressId, score, selectState, taskId, createTime, updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lin.paper.pojo.PSelectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_select
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from p_select
    where selectId = #{selectid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from p_select
    where selectId = #{selectid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lin.paper.pojo.PSelectExample" >
    delete from p_select
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lin.paper.pojo.PSelect" >
    insert into p_select (selectId, subjectId, stuId, 
      progressId, score, selectState, 
      taskId, createTime, updateTime
      )
    values (#{selectid,jdbcType=VARCHAR}, #{subjectid,jdbcType=VARCHAR}, #{stuid,jdbcType=VARCHAR}, 
      #{progressid,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE}, #{selectstate,jdbcType=INTEGER}, 
      #{taskid,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lin.paper.pojo.PSelect" >
    insert into p_select
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="selectid != null" >
        selectId,
      </if>
      <if test="subjectid != null" >
        subjectId,
      </if>
      <if test="stuid != null" >
        stuId,
      </if>
      <if test="progressid != null" >
        progressId,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="selectstate != null" >
        selectState,
      </if>
      <if test="taskid != null" >
        taskId,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="selectid != null" >
        #{selectid,jdbcType=VARCHAR},
      </if>
      <if test="subjectid != null" >
        #{subjectid,jdbcType=VARCHAR},
      </if>
      <if test="stuid != null" >
        #{stuid,jdbcType=VARCHAR},
      </if>
      <if test="progressid != null" >
        #{progressid,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="selectstate != null" >
        #{selectstate,jdbcType=INTEGER},
      </if>
      <if test="taskid != null" >
        #{taskid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lin.paper.pojo.PSelectExample" resultType="java.lang.Integer" >
    select count(*) from p_select
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update p_select
    <set >
      <if test="record.selectid != null" >
        selectId = #{record.selectid,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectid != null" >
        subjectId = #{record.subjectid,jdbcType=VARCHAR},
      </if>
      <if test="record.stuid != null" >
        stuId = #{record.stuid,jdbcType=VARCHAR},
      </if>
      <if test="record.progressid != null" >
        progressId = #{record.progressid,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.selectstate != null" >
        selectState = #{record.selectstate,jdbcType=INTEGER},
      </if>
      <if test="record.taskid != null" >
        taskId = #{record.taskid,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update p_select
    set selectId = #{record.selectid,jdbcType=VARCHAR},
      subjectId = #{record.subjectid,jdbcType=VARCHAR},
      stuId = #{record.stuid,jdbcType=VARCHAR},
      progressId = #{record.progressid,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DOUBLE},
      selectState = #{record.selectstate,jdbcType=INTEGER},
      taskId = #{record.taskid,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lin.paper.pojo.PSelect" >
    update p_select
    <set >
      <if test="subjectid != null" >
        subjectId = #{subjectid,jdbcType=VARCHAR},
      </if>
      <if test="stuid != null" >
        stuId = #{stuid,jdbcType=VARCHAR},
      </if>
      <if test="progressid != null" >
        progressId = #{progressid,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="selectstate != null" >
        selectState = #{selectstate,jdbcType=INTEGER},
      </if>
      <if test="taskid != null" >
        taskId = #{taskid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where selectId = #{selectid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lin.paper.pojo.PSelect" >
    update p_select
    set subjectId = #{subjectid,jdbcType=VARCHAR},
      stuId = #{stuid,jdbcType=VARCHAR},
      progressId = #{progressid,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE},
      selectState = #{selectstate,jdbcType=INTEGER},
      taskId = #{taskid,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where selectId = #{selectid,jdbcType=VARCHAR}
  </update>
</mapper>